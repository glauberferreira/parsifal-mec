#executar -> docker-compose up --build
version: '3'

services:
  db:
    build: ./docker-config/postgres
    networks:
      - webnet
    volumes:
      - ${DB_DATA_FOLDER}:/var/lib/postgresql/data
    restart: always
    env_file:
      - .env
    ports:
      - "5432"
    command: ["postgres", "-c", "shared_preload_libraries=pg_stat_statements", "-c", "log_min_duration_statement=${LOG_MIN_DURATION_STATEMENT}"]
    labels:
      co.elastic.metrics/module: postgresql
      co.elastic.metrics/metricsets: database,bgwriter,activity,statement
      co.elastic.metrics/period: 10s
     # there's 2 & to escape it inside a docker compose file
      co.elastic.metrics/hosts: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD_ENCODED}@$${data.host}:5432?sslmode=disable
      co.elastic.logs/module: postgresql
      co.elastic.logs/fileset: log
  web:
    build: .
    command:
      - ./wait-for-postgres.sh
      - db
      - parsifal
      - ${POSTGRES_PASSWORD}
      - ./app-entrypoint.sh
    depends_on:
      - db
    networks:
      - webnet
    volumes:
      - ${STATIC_FOLDER}:/static
      - ${MEDIA_FOLDER}:/media
    restart: always
  r:
    build: ./docker-config/r
    networks:
      - webnet
    restart: always
  staticweb:
    image: nginx:latest
    ports:
      - "${STATIC_WEB_PORT}:80"
    volumes:
      - ${ROOT_FOLDER}:/app
      - ./site.conf:/etc/nginx/conf.d/site.conf
    depends_on:
      - web
    networks:
      - webnet
    restart: always
    env_file:
      - .env
    labels:
      co.elastic.metrics/module: nginx
      co.elastic.metrics/metricsets: stubstatus
      co.elastic.metrics/period: 10s
      # there's 2 & to escape it inside a docker compose file
      co.elastic.metrics/hosts: '$${data.host}:10080'
      co.elastic.logs/module: nginx
      co.elastic.logs/fileset.stdout: access
      co.elastic.logs/fileset.stderr: error

networks:
  webnet:
